import{_ as o,c as t,o as s,a as e}from"./app-CPcPz2RP.js";const n={},c=e("h2",{id:"_4-node-的事件循环",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-node-的事件循环"},[e("span",null,"4. Node 的事件循环")])],-1),l=e("p",null,"Node 中的 process.nextTick 有很多文章把 Node 的 process.nextTick 和微任务混为一谈，但其实并不是同一个东西 process.nextTick 是 Node.js 自身定义实现的一种机制，有自己的 nextTickQueue process.nextTick 执行顺序早于微任务",-1),i=e("p",null,'console.log("start"); setTimeout(() => { console.log("timeout"); }, 0); Promise.resolve().then(() => { console.log("promise"); }); process.nextTick(() => { console.log("nextTick"); Promise.resolve().then(() => { console.log("promise1"); }); }); console.log("end"); // 执行结果 start end nextTick promise promise1 timeout',-1),r=[c,l,i];function d(_,a){return s(),t("div",null,r)}const p=o(n,[["render",d],["__file","Node的事件循环机制.html.vue"]]),h=JSON.parse('{"path":"/interview/Node.js/Node%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"4. Node 的事件循环","slug":"_4-node-的事件循环","link":"#_4-node-的事件循环","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"interview/Node.js/Node的事件循环机制.md"}');export{p as comp,h as data};
